
ble_sdk_lt_app.elf:     file format elf32-littletc32
ble_sdk_lt_app.elf
architecture: tc32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000550 memsz 0x00000550 flags r-x
    LOAD off    0x00008f00 vaddr 0x00808f00 paddr 0x00808f00 align 2**15
         filesz 0x00000000 memsz 0x00000380 flags rw-
private flags = 0: [APCS-32] [FPA float format]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00000130  00000000  00000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ram_code     00000420  00000130  00000130  00008130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000380  00808f00  00808f00  00008f00  2**4
                  ALLOC
  3 .TC32.attributes 00000010  00000000  00000000  00008550  2**0
                  CONTENTS, READONLY
  4 .comment      0000001a  00000000  00000000  00008560  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .vectors	00000000 .vectors
00000130 l    d  .ram_code	00000000 .ram_code
00808f00 l    d  .bss	00000000 .bss
00000000 l    d  .TC32.attributes	00000000 .TC32.attributes
00000000 l    d  .comment	00000000 .comment
00000301 l       *ABS*	00000000 BUILD_VERSION
0000001f l       *ABS*	00000000 MODE_BITS
00000012 l       *ABS*	00000000 IRQ_MODE
00000013 l       *ABS*	00000000 SVC_MODE
00000180 l       *ABS*	00000000 IRQ_STK_SIZE
000000e8 l       .vectors	00000000 FLL_D
00000026 l       .vectors	00000000 FLL_STK
00000030 l       .vectors	00000000 FLL_STK_END
000000b4 l       .vectors	00000000 DAT0
00000046 l       .vectors	00000000 ZERO
00000050 l       .vectors	00000000 ZERO_END
00000054 l       .vectors	00000000 ZERO_TAG
0000005e l       .vectors	00000000 ZERO_TAG_END
0000005e l       .vectors	00000000 SETIC
00000068 l       .vectors	00000000 COPY_CODE_INIT
00000098 l       .vectors	00000000 COPY_DATA_INIT
0000008c l       .vectors	00000000 COPY_CODE_DAT
0000007a l       .vectors	00000000 COPY_CODE_START
00000088 l       .vectors	00000000 COPY_CODE_END
000000dc l       .vectors	00000000 DATA_I
0000009e l       .vectors	00000000 COPY_DATA
000000ac l       .vectors	00000000 COPY_DATA_END
000000b0 l       .vectors	00000000 END
00808f00 l     O .bss	00000180 irq_stk
00000128 l       .vectors	00000000 ASMEND
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 analog.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 flash.c
0000038c l     F .ram_code	00000040 flash_send_addr
000003cc l     F .ram_code	0000002c flash_send_cmd
000003f8 l     F .ram_code	00000044 flash_wait_done
00000000 l    df *ABS*	00000000 blt_led.c
00000000         *UND*	00000000 rf_set_power_level_index
00809280 g       *ABS*	00000000 _end_bss_
0000000c g       *ABS*	00000000 __LOAD_RAM
000004d8 g     F .ram_code	00000078 flash_read_page
00000550 g       *ABS*	00000000 _bin_size_
00000000         *UND*	00000000 ev_buf_free
00000020 g       .vectors	00000000 __reset
00000000         *UND*	00000000 xtalType_rfMode
00000060 g       *ABS*	00000000 _ramcode_size_div_16_align_256_
00000550 g       *ABS*	00000000 _code_size_
00808f00 g       .ram_code	00000000 _end_data_
00809080 g     O .bss	00000100 buff
00808f00 g       .bss	00000000 _start_bss_
0000047c g     F .ram_code	0000005c flash_write_page
00000000         *UND*	00000000 rega_powerdn_dcdc_6p75
00000000 g       .vectors	00000000 __start
00808f00 g       .ram_code	00000000 _start_data_
00000378 g     F .ram_code	00000014 sleep_us
00809180 g     O .bss	00000100 check_buff
00000006 g       *ABS*	00000000 _ramcode_size_div_256_
00000000         *UND*	00000000 rf_drv_1m
00000000         *UND*	00000000 rf_drv_2m
00000134 g     F .ram_code	000001c4 main
00000000         *UND*	00000000 rega_poweron_dcdc_6p75
00000338 g     F .ram_code	00000040 analog_write
00000000         *UND*	00000000 TxPkt
000002f8 g     F .ram_code	00000040 analog_read
00000130 g     F .ram_code	00000002 irq_handler
00808600 g       *ABS*	00000000 _ictag_start_
00000000         *UND*	00000000 usbmouse_hid_report
00808700 g       *ABS*	00000000 _ictag_end_
00000100 g       .vectors	00000000 __irq
00000550 g       *ABS*	00000000 _dstored_
00000000         *UND*	00000000 SetRxMode
0000043c g     F .ram_code	00000040 flash_erase_sector
00000000         *UND*	00000000 SetTxMode



Disassembly of section .vectors:

00000000 <__start>:
   0:	800e      	tj.n	20 <__reset>
   2:	00000301 	tandeq	r0, r0, r1, lsl #6
   6:	4e4b0000 	undefined instruction 0x4e4b0000
   a:	0060544c 	trsubeq	r5, r0, ip, asr #8
   e:	80760088 	trsubshi	r0, r6, r8, lsl #1
  12:	0000      	tands	r0, r0
  14:	0000      	tands	r0, r0
  16:	0000      	tands	r0, r0
  18:	00000550 	tandeq	r0, r0, r0, asr r5
  1c:	00000000 	tandeq	r0, r0, r0

00000020 <__reset>:
  20:	0831      	tloadr	r0, [pc, #196]	; (e8 <FLL_D>)
  22:	0932      	tloadr	r1, [pc, #200]	; (ec <FLL_D+0x4>)
  24:	0a32      	tloadr	r2, [pc, #200]	; (f0 <FLL_D+0x8>)

00000026 <FLL_STK>:
  26:	0291      	tcmp	r1, r2
  28:	ca02      	tjge.n	30 <FLL_STK_END>
  2a:	5008      	tstorer	r0, [r1, #0]
  2c:	b104      	tadds	r1, #4
  2e:	87fa      	tj.n	26 <FLL_STK>

00000030 <FLL_STK_END>:
  30:	0820      	tloadr	r0, [pc, #128]	; (b4 <DAT0>)
  32:	6bc0      	tmcsr	r0
  34:	0821      	tloadr	r0, [pc, #132]	; (bc <DAT0+0x8>)
  36:	0685      	tmov	sp, r0
  38:	081f      	tloadr	r0, [pc, #124]	; (b8 <DAT0+0x4>)
  3a:	6bc0      	tmcsr	r0
  3c:	0820      	tloadr	r0, [pc, #128]	; (c0 <DAT0+0xc>)
  3e:	0685      	tmov	sp, r0
  40:	a000      	tmovs	r0, #0
  42:	0920      	tloadr	r1, [pc, #128]	; (c4 <DAT0+0x10>)
  44:	0a20      	tloadr	r2, [pc, #128]	; (c8 <DAT0+0x14>)

00000046 <ZERO>:
  46:	0291      	tcmp	r1, r2
  48:	ca02      	tjge.n	50 <ZERO_END>
  4a:	5008      	tstorer	r0, [r1, #0]
  4c:	b104      	tadds	r1, #4
  4e:	87fa      	tj.n	46 <ZERO>

00000050 <ZERO_END>:
  50:	091f      	tloadr	r1, [pc, #124]	; (d0 <DAT0+0x1c>)
  52:	0a20      	tloadr	r2, [pc, #128]	; (d4 <DAT0+0x20>)

00000054 <ZERO_TAG>:
  54:	0291      	tcmp	r1, r2
  56:	ca02      	tjge.n	5e <SETIC>
  58:	5008      	tstorer	r0, [r1, #0]
  5a:	b104      	tadds	r1, #4
  5c:	87fa      	tj.n	54 <ZERO_TAG>

0000005e <SETIC>:
  5e:	091b      	tloadr	r1, [pc, #108]	; (cc <DAT0+0x18>)
  60:	081d      	tloadr	r0, [pc, #116]	; (d8 <DAT0+0x24>)
  62:	081d      	tloadr	r0, [pc, #116]	; (d8 <DAT0+0x24>)
  64:	081c      	tloadr	r0, [pc, #112]	; (d8 <DAT0+0x24>)
  66:	081c      	tloadr	r0, [pc, #112]	; (d8 <DAT0+0x24>)

00000068 <COPY_CODE_INIT>:
  68:	a373      	tmovs	r3, #115	; 0x73
  6a:	f31b      	tshftls	r3, r3, #12
  6c:	581b      	tloadr	r3, [r3, #0]
  6e:	ab00      	tcmp	r3, #0
  70:	c112      	tjne.n	98 <COPY_DATA_INIT>
  72:	a272      	tmovs	r2, #114	; 0x72
  74:	0b05      	tloadr	r3, [pc, #20]	; (8c <COPY_CODE_DAT>)
  76:	0806      	tloadr	r0, [pc, #24]	; (90 <COPY_CODE_DAT+0x4>)
  78:	f312      	tshftls	r2, r2, #12

0000007a <COPY_CODE_START>:
  7a:	da02      	tloadm	r2!, {r1}
  7c:	d302      	tstorem	r3!, {r1}
  7e:	0283      	tcmp	r3, r0
  80:	c1fb      	tjne.n	7a <COPY_CODE_START>
  82:	0b04      	tloadr	r3, [pc, #16]	; (94 <COPY_CODE_DAT+0x8>)
  84:	a288      	tmovs	r2, #136	; 0x88
  86:	401a      	tstorerb	r2, [r3, #0]

00000088 <COPY_CODE_END>:
  88:	87fe      	tj.n	88 <COPY_CODE_END>
  8a:	46c0      	tnop			; (mov r8, r8)

0000008c <COPY_CODE_DAT>:
  8c:	00808000 	taddeq	r8, r0, r0
  90:	00808600 	taddeq	r8, r0, r0, lsl #12
  94:	00800602 	taddeq	r0, r0, r2, lsl #12

00000098 <COPY_DATA_INIT>:
  98:	0910      	tloadr	r1, [pc, #64]	; (dc <DATA_I>)
  9a:	0a11      	tloadr	r2, [pc, #68]	; (e0 <DATA_I+0x4>)
  9c:	0b11      	tloadr	r3, [pc, #68]	; (e4 <DATA_I+0x8>)

0000009e <COPY_DATA>:
  9e:	029a      	tcmp	r2, r3
  a0:	ca04      	tjge.n	ac <COPY_DATA_END>
  a2:	5808      	tloadr	r0, [r1, #0]
  a4:	5010      	tstorer	r0, [r2, #0]
  a6:	b104      	tadds	r1, #4
  a8:	b204      	tadds	r2, #4
  aa:	87f8      	tj.n	9e <COPY_DATA>

000000ac <COPY_DATA_END>:
  ac:	9000 9842 	tjl	134 <main>

000000b0 <END>:
  b0:	87fe      	tj.n	b0 <END>
  b2:	46c0      	tnop			; (mov r8, r8)

000000b4 <DAT0>:
  b4:	00000012 	tandeq	r0, r0, r2, lsl r0
  b8:	00000013 	tandeq	r0, r0, r3, lsl r0
  bc:	00809080 	taddeq	r9, r0, r0, lsl #1
  c0:	0080c000 	taddeq	ip, r0, r0
  c4:	00808f00 	taddeq	r8, r0, r0, lsl #30
  c8:	00809280 	taddeq	r9, r0, r0, lsl #5
  cc:	0080060c 	taddeq	r0, r0, ip, lsl #12
  d0:	00808600 	taddeq	r8, r0, r0, lsl #12
  d4:	00808700 	taddeq	r8, r0, r0, lsl #14
  d8:	00000006 	tandeq	r0, r0, r6

000000dc <DATA_I>:
  dc:	00000550 	tandeq	r0, r0, r0, asr r5
  e0:	00808f00 	taddeq	r8, r0, r0, lsl #30
  e4:	00808f00 	taddeq	r8, r0, r0, lsl #30

000000e8 <FLL_D>:
  e8:	ffffffff 	undefined instruction 0xffffffff
  ec:	00808f00 	taddeq	r8, r0, r0, lsl #30
  f0:	0080c000 	taddeq	ip, r0, r0
  f4:	46c0      	tnop			; (mov r8, r8)
  f6:	46c0      	tnop			; (mov r8, r8)
  f8:	46c0      	tnop			; (mov r8, r8)
  fa:	46c0      	tnop			; (mov r8, r8)
  fc:	46c0      	tnop			; (mov r8, r8)
  fe:	46c0      	tnop			; (mov r8, r8)

00000100 <__irq>:
 100:	6500      	tpush	{lr}
 102:	64ff      	tpush	{r0, r1, r2, r3, r4, r5, r6, r7}
 104:	6bd8      	tmrss	r0
 106:	0641      	tmov	r1, r8
 108:	064a      	tmov	r2, r9
 10a:	0653      	tmov	r3, sl
 10c:	065c      	tmov	r4, fp
 10e:	0665      	tmov	r5, ip
 110:	643f      	tpush	{r0, r1, r2, r3, r4, r5}
 112:	9000 980d 	tjl	130 <irq_handler>
 116:	6c3f      	tpop	{r0, r1, r2, r3, r4, r5}
 118:	0688      	tmov	r8, r1
 11a:	0691      	tmov	r9, r2
 11c:	069a      	tmov	sl, r3
 11e:	06a3      	tmov	fp, r4
 120:	06ac      	tmov	ip, r5
 122:	6bd0      	tmssr	r0
 124:	6cff      	tpop	{r0, r1, r2, r3, r4, r5, r6, r7}
 126:	6900      	treti	{pc}

00000128 <ASMEND>:
 128:	46c0      	tnop			; (mov r8, r8)
 12a:	46c0      	tnop			; (mov r8, r8)
 12c:	46c0      	tnop			; (mov r8, r8)
 12e:	46c0      	tnop			; (mov r8, r8)

Disassembly of section .ram_code:

00000130 <irq_handler>:
irq_handler():
 130:	0770      	tjex	lr
 132:	46c0      	tnop			; (mov r8, r8)

00000134 <main>:
main():
 134:	65f0      	tpush	{r4, r5, r6, r7, lr}
 136:	6081      	tsub	sp, #4
 138:	a500      	tmovs	r5, #0
 13a:	0b64      	tloadr	r3, [pc, #400]	; (2cc <IRQ_STK_SIZE+0x14c>)
 13c:	401d      	tstorerb	r5, [r3, #0]
 13e:	b301      	tadds	r3, #1
 140:	401d      	tstorerb	r5, [r3, #0]
 142:	b301      	tadds	r3, #1
 144:	401d      	tstorerb	r5, [r3, #0]
 146:	a3ff      	tmovs	r3, #255	; 0xff
 148:	0a61      	tloadr	r2, [pc, #388]	; (2d0 <IRQ_STK_SIZE+0x150>)
 14a:	4013      	tstorerb	r3, [r2, #0]
 14c:	b201      	tadds	r2, #1
 14e:	4013      	tstorerb	r3, [r2, #0]
 150:	a201      	tmovs	r2, #1
 152:	0b60      	tloadr	r3, [pc, #384]	; (2d4 <IRQ_STK_SIZE+0x154>)
 154:	401a      	tstorerb	r2, [r3, #0]
 156:	bb0d      	tsubs	r3, #13
 158:	bbff      	tsubs	r3, #255	; 0xff
 15a:	481a      	tloadrb	r2, [r3, #0]
 15c:	401d      	tstorerb	r5, [r3, #0]
 15e:	a03c      	tmovs	r0, #60	; 0x3c
 160:	a1ff      	tmovs	r1, #255	; 0xff
 162:	9000 98e9 	tjl	338 <analog_write>
 166:	a680      	tmovs	r6, #128	; 0x80
 168:	f2b6      	tshftls	r6, r6, #10
 16a:	0c5b      	tloadr	r4, [pc, #364]	; (2d8 <IRQ_STK_SIZE+0x158>)
 16c:	ec30      	tadds	r0, r6, #0
 16e:	a180      	tmovs	r1, #128	; 0x80
 170:	f049      	tshftls	r1, r1, #1
 172:	ec22      	tadds	r2, r4, #0
 174:	9000 99b0 	tjl	4d8 <flash_read_page>
 178:	59a3      	tloadr	r3, [r4, #24]
 17a:	f21a      	tshftls	r2, r3, #8
 17c:	fa12      	tshftrs	r2, r2, #8
 17e:	3200      	tstorer	r2, [sp, #0]
 180:	fe1b      	tshftrs	r3, r3, #24
 182:	ab12      	tcmp	r3, #18
 184:	c01b      	tjeq.n	1be <IRQ_STK_SIZE+0x3e>
 186:	4025      	tstorerb	r5, [r4, #0]
 188:	a03c      	tmovs	r0, #60	; 0x3c
 18a:	a1ff      	tmovs	r1, #255	; 0xff
 18c:	9000 98d4 	tjl	338 <analog_write>
 190:	a0e6      	tmovs	r0, #230	; 0xe6
 192:	f2c0      	tshftls	r0, r0, #11
 194:	a101      	tmovs	r1, #1
 196:	ec22      	tadds	r2, r4, #0
 198:	9000 9970 	tjl	47c <flash_write_page>
 19c:	3c00      	tloadr	r4, [sp, #0]
 19e:	bc01      	tsubs	r4, #1
 1a0:	a3f8      	tmovs	r3, #248	; 0xf8
 1a2:	f25b      	tshftls	r3, r3, #9
 1a4:	001c      	tands	r4, r3
 1a6:	a380      	tmovs	r3, #128	; 0x80
 1a8:	f29b      	tshftls	r3, r3, #10
 1aa:	e8e0      	tadds	r0, r4, r3
 1ac:	9000 9946 	tjl	43c <flash_erase_sector>
 1b0:	0b4a      	tloadr	r3, [pc, #296]	; (2dc <IRQ_STK_SIZE+0x15c>)
 1b2:	e8e4      	tadds	r4, r4, r3
 1b4:	c5f7      	tjpl.n	1a6 <IRQ_STK_SIZE+0x26>
 1b6:	a220      	tmovs	r2, #32
 1b8:	0b49      	tloadr	r3, [pc, #292]	; (2e0 <IRQ_STK_SIZE+0x160>)
 1ba:	401a      	tstorerb	r2, [r3, #0]
 1bc:	87fe      	tj.n	1bc <IRQ_STK_SIZE+0x3c>
 1be:	3b00      	tloadr	r3, [sp, #0]
 1c0:	02b3      	tcmp	r3, r6
 1c2:	c87f      	tjhi.n	2c4 <IRQ_STK_SIZE+0x144>
 1c4:	a680      	tmovs	r6, #128	; 0x80
 1c6:	f176      	tshftls	r6, r6, #5
 1c8:	0d46      	tloadr	r5, [pc, #280]	; (2e4 <IRQ_STK_SIZE+0x164>)
 1ca:	a780      	tmovs	r7, #128	; 0x80
 1cc:	f07f      	tshftls	r7, r7, #1
 1ce:	3b00      	tloadr	r3, [sp, #0]
 1d0:	02b3      	tcmp	r3, r6
 1d2:	c92a      	tjls.n	22a <IRQ_STK_SIZE+0xaa>
 1d4:	f533      	tshftls	r3, r6, #20
 1d6:	ab00      	tcmp	r3, #0
 1d8:	c023      	tjeq.n	222 <IRQ_STK_SIZE+0xa2>
 1da:	a380      	tmovs	r3, #128	; 0x80
 1dc:	f29b      	tshftls	r3, r3, #10
 1de:	e8f0      	tadds	r0, r6, r3
 1e0:	a180      	tmovs	r1, #128	; 0x80
 1e2:	f049      	tshftls	r1, r1, #1
 1e4:	ec22      	tadds	r2, r4, #0
 1e6:	9000 9977 	tjl	4d8 <flash_read_page>
 1ea:	ec30      	tadds	r0, r6, #0
 1ec:	a180      	tmovs	r1, #128	; 0x80
 1ee:	f049      	tshftls	r1, r1, #1
 1f0:	ec22      	tadds	r2, r4, #0
 1f2:	9000 9943 	tjl	47c <flash_write_page>
 1f6:	ec30      	tadds	r0, r6, #0
 1f8:	a180      	tmovs	r1, #128	; 0x80
 1fa:	f049      	tshftls	r1, r1, #1
 1fc:	ec2a      	tadds	r2, r5, #0
 1fe:	9000 996b 	tjl	4d8 <flash_read_page>
 202:	a300      	tmovs	r3, #0
 204:	8002      	tj.n	20c <IRQ_STK_SIZE+0x8c>
 206:	b301      	tadds	r3, #1
 208:	02bb      	tcmp	r3, r7
 20a:	c007      	tjeq.n	21c <IRQ_STK_SIZE+0x9c>
 20c:	1ce1      	tloadrb	r1, [r4, r3]
 20e:	1cea      	tloadrb	r2, [r5, r3]
 210:	0291      	tcmp	r1, r2
 212:	c0f8      	tjeq.n	206 <IRQ_STK_SIZE+0x86>
 214:	0b34      	tloadr	r3, [pc, #208]	; (2e8 <IRQ_STK_SIZE+0x168>)
 216:	001e      	tands	r6, r3
 218:	be01      	tsubs	r6, #1
 21a:	beff      	tsubs	r6, #255	; 0xff
 21c:	b601      	tadds	r6, #1
 21e:	b6ff      	tadds	r6, #255	; 0xff
 220:	87d5      	tj.n	1ce <IRQ_STK_SIZE+0x4e>
 222:	ec30      	tadds	r0, r6, #0
 224:	9000 990a 	tjl	43c <flash_erase_sector>
 228:	87d7      	tj.n	1da <IRQ_STK_SIZE+0x5a>
 22a:	a600      	tmovs	r6, #0
 22c:	a780      	tmovs	r7, #128	; 0x80
 22e:	f07f      	tshftls	r7, r7, #1
 230:	f533      	tshftls	r3, r6, #20
 232:	ab00      	tcmp	r3, #0
 234:	c042      	tjeq.n	2bc <IRQ_STK_SIZE+0x13c>
 236:	a380      	tmovs	r3, #128	; 0x80
 238:	f29b      	tshftls	r3, r3, #10
 23a:	e8f0      	tadds	r0, r6, r3
 23c:	a180      	tmovs	r1, #128	; 0x80
 23e:	f049      	tshftls	r1, r1, #1
 240:	ec22      	tadds	r2, r4, #0
 242:	9000 9949 	tjl	4d8 <flash_read_page>
 246:	ec30      	tadds	r0, r6, #0
 248:	a180      	tmovs	r1, #128	; 0x80
 24a:	f049      	tshftls	r1, r1, #1
 24c:	ec22      	tadds	r2, r4, #0
 24e:	9000 9915 	tjl	47c <flash_write_page>
 252:	ec30      	tadds	r0, r6, #0
 254:	a180      	tmovs	r1, #128	; 0x80
 256:	f049      	tshftls	r1, r1, #1
 258:	ec2a      	tadds	r2, r5, #0
 25a:	9000 993d 	tjl	4d8 <flash_read_page>
 25e:	a300      	tmovs	r3, #0
 260:	8002      	tj.n	268 <IRQ_STK_SIZE+0xe8>
 262:	b301      	tadds	r3, #1
 264:	02bb      	tcmp	r3, r7
 266:	c007      	tjeq.n	278 <IRQ_STK_SIZE+0xf8>
 268:	1ce1      	tloadrb	r1, [r4, r3]
 26a:	1cea      	tloadrb	r2, [r5, r3]
 26c:	0291      	tcmp	r1, r2
 26e:	c0f8      	tjeq.n	262 <IRQ_STK_SIZE+0xe2>
 270:	0b1d      	tloadr	r3, [pc, #116]	; (2e8 <IRQ_STK_SIZE+0x168>)
 272:	001e      	tands	r6, r3
 274:	be01      	tsubs	r6, #1
 276:	beff      	tsubs	r6, #255	; 0xff
 278:	b601      	tadds	r6, #1
 27a:	b6ff      	tadds	r6, #255	; 0xff
 27c:	0b1b      	tloadr	r3, [pc, #108]	; (2ec <IRQ_STK_SIZE+0x16c>)
 27e:	029e      	tcmp	r6, r3
 280:	cdd6      	tjle.n	230 <IRQ_STK_SIZE+0xb0>
 282:	a300      	tmovs	r3, #0
 284:	4023      	tstorerb	r3, [r4, #0]
 286:	a0e6      	tmovs	r0, #230	; 0xe6
 288:	f2c0      	tshftls	r0, r0, #11
 28a:	a101      	tmovs	r1, #1
 28c:	ec22      	tadds	r2, r4, #0
 28e:	9000 98f5 	tjl	47c <flash_write_page>
 292:	3c00      	tloadr	r4, [sp, #0]
 294:	bc01      	tsubs	r4, #1
 296:	a3f8      	tmovs	r3, #248	; 0xf8
 298:	f25b      	tshftls	r3, r3, #9
 29a:	001c      	tands	r4, r3
 29c:	a380      	tmovs	r3, #128	; 0x80
 29e:	f29b      	tshftls	r3, r3, #10
 2a0:	e8e0      	tadds	r0, r4, r3
 2a2:	9000 98cb 	tjl	43c <flash_erase_sector>
 2a6:	0b0d      	tloadr	r3, [pc, #52]	; (2dc <IRQ_STK_SIZE+0x15c>)
 2a8:	e8e4      	tadds	r4, r4, r3
 2aa:	c5f7      	tjpl.n	29c <IRQ_STK_SIZE+0x11c>
 2ac:	a03c      	tmovs	r0, #60	; 0x3c
 2ae:	a1ff      	tmovs	r1, #255	; 0xff
 2b0:	9000 9842 	tjl	338 <analog_write>
 2b4:	a220      	tmovs	r2, #32
 2b6:	0b0a      	tloadr	r3, [pc, #40]	; (2e0 <IRQ_STK_SIZE+0x160>)
 2b8:	401a      	tstorerb	r2, [r3, #0]
 2ba:	87fe      	tj.n	2ba <IRQ_STK_SIZE+0x13a>
 2bc:	ec30      	tadds	r0, r6, #0
 2be:	9000 98bd 	tjl	43c <flash_erase_sector>
 2c2:	87b8      	tj.n	236 <IRQ_STK_SIZE+0xb6>
 2c4:	0a0a      	tloadr	r2, [pc, #40]	; (2f0 <IRQ_STK_SIZE+0x170>)
 2c6:	0b0b      	tloadr	r3, [pc, #44]	; (2f4 <IRQ_STK_SIZE+0x174>)
 2c8:	201a      	tstorerh	r2, [r3, #0]
 2ca:	87fe      	tj.n	2ca <IRQ_STK_SIZE+0x14a>
 2cc:	00800060 	taddeq	r0, r0, r0, rrx
 2d0:	00800063 	taddeq	r0, r0, r3, rrx
 2d4:	0080074f 	taddeq	r0, r0, pc, asr #14
 2d8:	00809080 	taddeq	r9, r0, r0, lsl #1
 2dc:	fffff000 	undefined instruction 0xfffff000
 2e0:	0080006f 	taddeq	r0, r0, pc, rrx
 2e4:	00809180 	taddeq	r9, r0, r0, lsl #3
 2e8:	00fff000 	trsubcseq	pc, pc, r0
 2ec:	00000fff 	undefined instruction 0x00000fff
 2f0:	000055aa 	tandeq	r5, r0, sl, lsr #11
 2f4:	00808000 	taddeq	r8, r0, r0

000002f8 <analog_read>:
analog_read():
 2f8:	6510      	tpush	{r4, lr}
 2fa:	f600      	tshftls	r0, r0, #24
 2fc:	fe00      	tshftrs	r0, r0, #24
 2fe:	0b0a      	tloadr	r3, [pc, #40]	; (328 <BUILD_VERSION+0x27>)
 300:	481c      	tloadrb	r4, [r3, #0]
 302:	a200      	tmovs	r2, #0
 304:	401a      	tstorerb	r2, [r3, #0]
 306:	0b09      	tloadr	r3, [pc, #36]	; (32c <BUILD_VERSION+0x2b>)
 308:	4018      	tstorerb	r0, [r3, #0]
 30a:	0909      	tloadr	r1, [pc, #36]	; (330 <BUILD_VERSION+0x2f>)
 30c:	a340      	tmovs	r3, #64	; 0x40
 30e:	400b      	tstorerb	r3, [r1, #0]
 310:	a201      	tmovs	r2, #1
 312:	480b      	tloadrb	r3, [r1, #0]
 314:	0013      	tands	r3, r2
 316:	c1fc      	tjne.n	312 <BUILD_VERSION+0x11>
 318:	0a06      	tloadr	r2, [pc, #24]	; (334 <BUILD_VERSION+0x33>)
 31a:	4810      	tloadrb	r0, [r2, #0]
 31c:	b201      	tadds	r2, #1
 31e:	4013      	tstorerb	r3, [r2, #0]
 320:	0b01      	tloadr	r3, [pc, #4]	; (328 <BUILD_VERSION+0x27>)
 322:	401c      	tstorerb	r4, [r3, #0]
 324:	6d10      	tpop	{r4, pc}
 326:	46c0      	tnop			; (mov r8, r8)
 328:	00800643 	taddeq	r0, r0, r3, asr #12
 32c:	008000b8 	tstorerheq	r0, [r0], r8
 330:	008000ba 	tstorerheq	r0, [r0], sl
 334:	008000b9 	tstorerheq	r0, [r0], r9

00000338 <analog_write>:
analog_write():
 338:	6510      	tpush	{r4, lr}
 33a:	f600      	tshftls	r0, r0, #24
 33c:	fe00      	tshftrs	r0, r0, #24
 33e:	f609      	tshftls	r1, r1, #24
 340:	fe09      	tshftrs	r1, r1, #24
 342:	0b0a      	tloadr	r3, [pc, #40]	; (36c <analog_write+0x34>)
 344:	481c      	tloadrb	r4, [r3, #0]
 346:	a200      	tmovs	r2, #0
 348:	401a      	tstorerb	r2, [r3, #0]
 34a:	0b09      	tloadr	r3, [pc, #36]	; (370 <analog_write+0x38>)
 34c:	4018      	tstorerb	r0, [r3, #0]
 34e:	b301      	tadds	r3, #1
 350:	4019      	tstorerb	r1, [r3, #0]
 352:	0908      	tloadr	r1, [pc, #32]	; (374 <analog_write+0x3c>)
 354:	a360      	tmovs	r3, #96	; 0x60
 356:	400b      	tstorerb	r3, [r1, #0]
 358:	a201      	tmovs	r2, #1
 35a:	480b      	tloadrb	r3, [r1, #0]
 35c:	0013      	tands	r3, r2
 35e:	c1fc      	tjne.n	35a <analog_write+0x22>
 360:	0a04      	tloadr	r2, [pc, #16]	; (374 <analog_write+0x3c>)
 362:	4013      	tstorerb	r3, [r2, #0]
 364:	0b01      	tloadr	r3, [pc, #4]	; (36c <analog_write+0x34>)
 366:	401c      	tstorerb	r4, [r3, #0]
 368:	6d10      	tpop	{r4, pc}
 36a:	46c0      	tnop			; (mov r8, r8)
 36c:	00800643 	taddeq	r0, r0, r3, asr #12
 370:	008000b8 	tstorerheq	r0, [r0], r8
 374:	008000ba 	tstorerheq	r0, [r0], sl

00000378 <sleep_us>:
sleep_us():
 378:	0a03      	tloadr	r2, [pc, #12]	; (388 <sleep_us+0x10>)
 37a:	5811      	tloadr	r1, [r2, #0]
 37c:	f140      	tshftls	r0, r0, #5
 37e:	5813      	tloadr	r3, [r2, #0]
 380:	ea5b      	tsubs	r3, r3, r1
 382:	0298      	tcmp	r0, r3
 384:	c2fb      	tjcs.n	37e <sleep_us+0x6>
 386:	0770      	tjex	lr
 388:	00800740 	taddeq	r0, r0, r0, asr #14

0000038c <flash_send_addr>:
flash_send_addr():
 38c:	f202      	tshftls	r2, r0, #8
 38e:	fe12      	tshftrs	r2, r2, #24
 390:	0b0c      	tloadr	r3, [pc, #48]	; (3c4 <flash_send_addr+0x38>)
 392:	401a      	tstorerb	r2, [r3, #0]
 394:	090c      	tloadr	r1, [pc, #48]	; (3c8 <flash_send_addr+0x3c>)
 396:	a210      	tmovs	r2, #16
 398:	480b      	tloadrb	r3, [r1, #0]
 39a:	021a      	tnand	r2, r3
 39c:	c1fc      	tjne.n	398 <flash_send_addr+0xc>
 39e:	f402      	tshftls	r2, r0, #16
 3a0:	fe12      	tshftrs	r2, r2, #24
 3a2:	0b08      	tloadr	r3, [pc, #32]	; (3c4 <flash_send_addr+0x38>)
 3a4:	401a      	tstorerb	r2, [r3, #0]
 3a6:	0908      	tloadr	r1, [pc, #32]	; (3c8 <flash_send_addr+0x3c>)
 3a8:	a210      	tmovs	r2, #16
 3aa:	480b      	tloadrb	r3, [r1, #0]
 3ac:	021a      	tnand	r2, r3
 3ae:	c1fc      	tjne.n	3aa <flash_send_addr+0x1e>
 3b0:	f600      	tshftls	r0, r0, #24
 3b2:	fe00      	tshftrs	r0, r0, #24
 3b4:	0b03      	tloadr	r3, [pc, #12]	; (3c4 <flash_send_addr+0x38>)
 3b6:	4018      	tstorerb	r0, [r3, #0]
 3b8:	0903      	tloadr	r1, [pc, #12]	; (3c8 <flash_send_addr+0x3c>)
 3ba:	a210      	tmovs	r2, #16
 3bc:	480b      	tloadrb	r3, [r1, #0]
 3be:	021a      	tnand	r2, r3
 3c0:	c1fc      	tjne.n	3bc <flash_send_addr+0x30>
 3c2:	0770      	tjex	lr
 3c4:	0080000c 	taddeq	r0, r0, ip
 3c8:	0080000d 	taddeq	r0, r0, sp

000003cc <flash_send_cmd>:
flash_send_cmd():
 3cc:	6530      	tpush	{r4, r5, lr}
 3ce:	ec05      	tadds	r5, r0, #0
 3d0:	0c07      	tloadr	r4, [pc, #28]	; (3f0 <flash_send_cmd+0x24>)
 3d2:	a301      	tmovs	r3, #1
 3d4:	4023      	tstorerb	r3, [r4, #0]
 3d6:	a001      	tmovs	r0, #1
 3d8:	97ff 9fce 	tjl	378 <sleep_us>
 3dc:	a300      	tmovs	r3, #0
 3de:	4023      	tstorerb	r3, [r4, #0]
 3e0:	0b04      	tloadr	r3, [pc, #16]	; (3f4 <flash_send_cmd+0x28>)
 3e2:	401d      	tstorerb	r5, [r3, #0]
 3e4:	a210      	tmovs	r2, #16
 3e6:	4823      	tloadrb	r3, [r4, #0]
 3e8:	021a      	tnand	r2, r3
 3ea:	c1fc      	tjne.n	3e6 <flash_send_cmd+0x1a>
 3ec:	6d30      	tpop	{r4, r5, pc}
 3ee:	46c0      	tnop			; (mov r8, r8)
 3f0:	0080000d 	taddeq	r0, r0, sp
 3f4:	0080000c 	taddeq	r0, r0, ip

000003f8 <flash_wait_done>:
flash_wait_done():
 3f8:	6570      	tpush	{r4, r5, r6, lr}
 3fa:	a064      	tmovs	r0, #100	; 0x64
 3fc:	97ff 9fbc 	tjl	378 <sleep_us>
 400:	a005      	tmovs	r0, #5
 402:	97ff 9fe3 	tjl	3cc <flash_send_cmd>
 406:	080a      	tloadr	r0, [pc, #40]	; (430 <flash_wait_done+0x38>)
 408:	0c0a      	tloadr	r4, [pc, #40]	; (434 <flash_wait_done+0x3c>)
 40a:	a600      	tmovs	r6, #0
 40c:	090a      	tloadr	r1, [pc, #40]	; (438 <flash_wait_done+0x40>)
 40e:	a210      	tmovs	r2, #16
 410:	a501      	tmovs	r5, #1
 412:	4026      	tstorerb	r6, [r4, #0]
 414:	480b      	tloadrb	r3, [r1, #0]
 416:	021a      	tnand	r2, r3
 418:	c1fc      	tjne.n	414 <flash_wait_done+0x1c>
 41a:	4823      	tloadrb	r3, [r4, #0]
 41c:	021d      	tnand	r5, r3
 41e:	c002      	tjeq.n	426 <flash_wait_done+0x2e>
 420:	b801      	tsubs	r0, #1
 422:	a800      	tcmp	r0, #0
 424:	c1f5      	tjne.n	412 <flash_wait_done+0x1a>
 426:	a201      	tmovs	r2, #1
 428:	0b03      	tloadr	r3, [pc, #12]	; (438 <flash_wait_done+0x40>)
 42a:	401a      	tstorerb	r2, [r3, #0]
 42c:	6d70      	tpop	{r4, r5, r6, pc}
 42e:	46c0      	tnop			; (mov r8, r8)
 430:	00989680 	taddseq	r9, r8, r0, lsl #13
 434:	0080000c 	taddeq	r0, r0, ip
 438:	0080000d 	taddeq	r0, r0, sp

0000043c <flash_erase_sector>:
flash_erase_sector():
 43c:	6570      	tpush	{r4, r5, r6, lr}
 43e:	ec06      	tadds	r6, r0, #0
 440:	0c0b      	tloadr	r4, [pc, #44]	; (470 <flash_erase_sector+0x34>)
 442:	4825      	tloadrb	r5, [r4, #0]
 444:	a300      	tmovs	r3, #0
 446:	4023      	tstorerb	r3, [r4, #0]
 448:	a208      	tmovs	r2, #8
 44a:	0b0a      	tloadr	r3, [pc, #40]	; (474 <flash_erase_sector+0x38>)
 44c:	401a      	tstorerb	r2, [r3, #0]
 44e:	a006      	tmovs	r0, #6
 450:	97ff 9fbc 	tjl	3cc <flash_send_cmd>
 454:	a020      	tmovs	r0, #32
 456:	97ff 9fb9 	tjl	3cc <flash_send_cmd>
 45a:	ec30      	tadds	r0, r6, #0
 45c:	97ff 9f96 	tjl	38c <flash_send_addr>
 460:	a201      	tmovs	r2, #1
 462:	0b05      	tloadr	r3, [pc, #20]	; (478 <flash_erase_sector+0x3c>)
 464:	401a      	tstorerb	r2, [r3, #0]
 466:	97ff 9fc7 	tjl	3f8 <flash_wait_done>
 46a:	4025      	tstorerb	r5, [r4, #0]
 46c:	6d70      	tpop	{r4, r5, r6, pc}
 46e:	46c0      	tnop			; (mov r8, r8)
 470:	00800643 	taddeq	r0, r0, r3, asr #12
 474:	00800623 	taddeq	r0, r0, r3, lsr #12
 478:	0080000d 	taddeq	r0, r0, sp

0000047c <flash_write_page>:
flash_write_page():
 47c:	65f0      	tpush	{r4, r5, r6, r7, lr}
 47e:	ec06      	tadds	r6, r0, #0
 480:	ec0c      	tadds	r4, r1, #0
 482:	ec15      	tadds	r5, r2, #0
 484:	0b11      	tloadr	r3, [pc, #68]	; (4cc <flash_write_page+0x50>)
 486:	481f      	tloadrb	r7, [r3, #0]
 488:	a200      	tmovs	r2, #0
 48a:	401a      	tstorerb	r2, [r3, #0]
 48c:	a006      	tmovs	r0, #6
 48e:	97ff 9f9d 	tjl	3cc <flash_send_cmd>
 492:	a002      	tmovs	r0, #2
 494:	97ff 9f9a 	tjl	3cc <flash_send_cmd>
 498:	ec30      	tadds	r0, r6, #0
 49a:	97ff 9f77 	tjl	38c <flash_send_addr>
 49e:	ac00      	tcmp	r4, #0
 4a0:	c00b      	tjeq.n	4ba <flash_write_page+0x3e>
 4a2:	a000      	tmovs	r0, #0
 4a4:	0e0a      	tloadr	r6, [pc, #40]	; (4d0 <flash_write_page+0x54>)
 4a6:	090b      	tloadr	r1, [pc, #44]	; (4d4 <flash_write_page+0x58>)
 4a8:	a210      	tmovs	r2, #16
 4aa:	1c2b      	tloadrb	r3, [r5, r0]
 4ac:	4033      	tstorerb	r3, [r6, #0]
 4ae:	480b      	tloadrb	r3, [r1, #0]
 4b0:	021a      	tnand	r2, r3
 4b2:	c1fc      	tjne.n	4ae <flash_write_page+0x32>
 4b4:	b001      	tadds	r0, #1
 4b6:	0284      	tcmp	r4, r0
 4b8:	c8f7      	tjhi.n	4aa <flash_write_page+0x2e>
 4ba:	a201      	tmovs	r2, #1
 4bc:	0b05      	tloadr	r3, [pc, #20]	; (4d4 <flash_write_page+0x58>)
 4be:	401a      	tstorerb	r2, [r3, #0]
 4c0:	97ff 9f9a 	tjl	3f8 <flash_wait_done>
 4c4:	0b01      	tloadr	r3, [pc, #4]	; (4cc <flash_write_page+0x50>)
 4c6:	401f      	tstorerb	r7, [r3, #0]
 4c8:	6df0      	tpop	{r4, r5, r6, r7, pc}
 4ca:	46c0      	tnop			; (mov r8, r8)
 4cc:	00800643 	taddeq	r0, r0, r3, asr #12
 4d0:	0080000c 	taddeq	r0, r0, ip
 4d4:	0080000d 	taddeq	r0, r0, sp

000004d8 <flash_read_page>:
flash_read_page():
 4d8:	65f0      	tpush	{r4, r5, r6, r7, lr}
 4da:	0647      	tmov	r7, r8
 4dc:	6480      	tpush	{r7}
 4de:	ec07      	tadds	r7, r0, #0
 4e0:	ec0c      	tadds	r4, r1, #0
 4e2:	ec15      	tadds	r5, r2, #0
 4e4:	0b17      	tloadr	r3, [pc, #92]	; (544 <flash_read_page+0x6c>)
 4e6:	481a      	tloadrb	r2, [r3, #0]
 4e8:	0690      	tmov	r8, r2
 4ea:	a600      	tmovs	r6, #0
 4ec:	401e      	tstorerb	r6, [r3, #0]
 4ee:	a003      	tmovs	r0, #3
 4f0:	97ff 9f6c 	tjl	3cc <flash_send_cmd>
 4f4:	ec38      	tadds	r0, r7, #0
 4f6:	97ff 9f49 	tjl	38c <flash_send_addr>
 4fa:	0b13      	tloadr	r3, [pc, #76]	; (548 <flash_read_page+0x70>)
 4fc:	401e      	tstorerb	r6, [r3, #0]
 4fe:	0813      	tloadr	r0, [pc, #76]	; (54c <flash_read_page+0x74>)
 500:	a110      	tmovs	r1, #16
 502:	0a12      	tloadr	r2, [pc, #72]	; (54c <flash_read_page+0x74>)
 504:	4803      	tloadrb	r3, [r0, #0]
 506:	0219      	tnand	r1, r3
 508:	c1fb      	tjne.n	502 <flash_read_page+0x2a>
 50a:	a30a      	tmovs	r3, #10
 50c:	4013      	tstorerb	r3, [r2, #0]
 50e:	a110      	tmovs	r1, #16
 510:	4813      	tloadrb	r3, [r2, #0]
 512:	0219      	tnand	r1, r3
 514:	c1fc      	tjne.n	510 <flash_read_page+0x38>
 516:	ac00      	tcmp	r4, #0
 518:	c00b      	tjeq.n	532 <flash_read_page+0x5a>
 51a:	a000      	tmovs	r0, #0
 51c:	0e0a      	tloadr	r6, [pc, #40]	; (548 <flash_read_page+0x70>)
 51e:	090b      	tloadr	r1, [pc, #44]	; (54c <flash_read_page+0x74>)
 520:	a210      	tmovs	r2, #16
 522:	4833      	tloadrb	r3, [r6, #0]
 524:	142b      	tstorerb	r3, [r5, r0]
 526:	480b      	tloadrb	r3, [r1, #0]
 528:	021a      	tnand	r2, r3
 52a:	c1fc      	tjne.n	526 <flash_read_page+0x4e>
 52c:	b001      	tadds	r0, #1
 52e:	02a0      	tcmp	r0, r4
 530:	c1f7      	tjne.n	522 <flash_read_page+0x4a>
 532:	a201      	tmovs	r2, #1
 534:	0b05      	tloadr	r3, [pc, #20]	; (54c <flash_read_page+0x74>)
 536:	401a      	tstorerb	r2, [r3, #0]
 538:	0b02      	tloadr	r3, [pc, #8]	; (544 <flash_read_page+0x6c>)
 53a:	0642      	tmov	r2, r8
 53c:	401a      	tstorerb	r2, [r3, #0]
 53e:	6c04      	tpop	{r2}
 540:	0690      	tmov	r8, r2
 542:	6df0      	tpop	{r4, r5, r6, r7, pc}
 544:	00800643 	taddeq	r0, r0, r3, asr #12
 548:	0080000c 	taddeq	r0, r0, ip
 54c:	0080000d 	taddeq	r0, r0, sp

Disassembly of section .bss:

00808f00 <_start_bss_>:
	...

00809080 <buff>:
	...

00809180 <check_buff>:
	...

Disassembly of section .TC32.attributes:

00000000 <.TC32.attributes>:
   0:	00000f41 	tandeq	r0, r0, r1, asr #30
   4:	61656100 	tcmpnvs	r5, r0, lsl #2
   8:	01006962 	tnandeq	r0, r2, ror #18
   c:	00000005 	tandeq	r0, r0, r5

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	tjcc	10d0d24 <_end_bss_+0x8c7aa4>
   4:	4e472820 	undefined instruction 0x4e472820
   8:	34202955 	tstorertcc	r2, [r0], #-2389	; 0x955
   c:	312e352e 	teqcc	lr, lr, lsr #10
  10:	3363742d 	tcmpncc	r3, #754974720	; 0x2d000000
  14:	2e312d32 	undefined instruction 0x2e312d32
  18:	Address 0x00000018 is out of bounds.

